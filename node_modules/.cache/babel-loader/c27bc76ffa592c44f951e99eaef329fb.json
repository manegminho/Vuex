{"remainingRequest":"C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\babel-loader\\lib\\index.js!C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\src\\Chart\\AppChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\src\\Chart\\AppChart.vue","mtime":1553976012720},{"path":"C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Vue_Js\\vue-camp\\10_my-app\\vue-apps\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Vue_Js\\\\vue-camp\\\\10_my-app\\\\vue-apps\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BarChart from \"./BarChart.vue\";\nimport LineChart from \"./LineChart.vue\";\nimport AppHeader from \"../views/AppHeader.vue\";\nvar BarchartData = [{\n  label: \"# of Votes\",\n  data: [12, 19, 3, 5, 2, 3],\n  backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n  borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n  borderWidth: 1\n}];\nvar LinechartData = [{\n  label: \"My First dataset\",\n  backgroundColor: \"rgb(255, 99, 132)\",\n  borderColor: \"rgb(255, 99, 132)\",\n  data: [0, 10, 5, 2, 20, 30, 45]\n}];\nexport default {\n  components: {\n    BarChart: BarChart,\n    LineChart: LineChart,\n    AppHeader: AppHeader\n  },\n  data: function data() {\n    return {\n      fetchedBarData: null //fetchedLineData: null\n\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.fetchBarChartData().then(function (result) {\n      /* console.log(result); */\n      _this.fetchedBarData = result;\n    });\n    /*   this.fetchLineChartData().then(result => {\n      this.fetchedLineData = result;\n    }); */\n  },\n  methods: {\n    fetchBarChartData: function fetchBarChartData() {\n      return new _Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(BarchartData);\n        }, 2000);\n      });\n    }\n    /*  fetchLineChartData() {\n      return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n          resolve(LinechartData);\n        }, 2000);\n      });\n    } */\n\n  }\n};",{"version":3,"sources":["AppChart.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAA,QAAA,MAAA,gBAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AAEA,IAAA,YAAA,GAAA,CACA;AACA,EAAA,KAAA,EAAA,YADA;AAEA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAFA;AAGA,EAAA,eAAA,EAAA,CACA,yBADA,EAEA,yBAFA,EAGA,yBAHA,EAIA,yBAJA,EAKA,0BALA,EAMA,yBANA,CAHA;AAWA,EAAA,WAAA,EAAA,CACA,uBADA,EAEA,uBAFA,EAGA,uBAHA,EAIA,uBAJA,EAKA,wBALA,EAMA,uBANA,CAXA;AAmBA,EAAA,WAAA,EAAA;AAnBA,CADA,CAAA;AAwBA,IAAA,aAAA,GAAA,CACA;AACA,EAAA,KAAA,EAAA,kBADA;AAEA,EAAA,eAAA,EAAA,mBAFA;AAGA,EAAA,WAAA,EAAA,mBAHA;AAIA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;AAJA,CADA,CAAA;AAQA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,IADA,CAEA;;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,OAZA,qBAYA;AAAA;;AACA,SAAA,iBAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA;AACA,MAAA,KAAA,CAAA,cAAA,GAAA,MAAA;AACA,KAHA;AAIA;;;AAGA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,aAAA,aAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,OAAA,CAAA,YAAA,CAAA;AACA,SAFA,EAEA,IAFA,CAAA;AAGA,OAJA,CAAA;AAKA;AAEA;;;;;;;;AATA;AArBA,CAAA","sourcesContent":["<template>\n  <div>\n    <app-header></app-header>\n    <p style=\"margin-bottom:365px\"></p>\n    <bar-chart v-bind:chartbarData=\"fetchedBarData\" type=\"bar\"></bar-chart>\n    <!-- <line-chart v-bind:chartlinData=\"fetchedLineData\" type=\"bar\"></line-chart> -->\n    <line-chart></line-chart>\n  </div>\n</template>\n\n<script>\nimport BarChart from \"./BarChart.vue\";\nimport LineChart from \"./LineChart.vue\";\nimport AppHeader from \"../views/AppHeader.vue\";\n\nlet BarchartData = [\n  {\n    label: \"# of Votes\",\n    data: [12, 19, 3, 5, 2, 3],\n    backgroundColor: [\n      \"rgba(255, 99, 132, 0.2)\",\n      \"rgba(54, 162, 235, 0.2)\",\n      \"rgba(255, 206, 86, 0.2)\",\n      \"rgba(75, 192, 192, 0.2)\",\n      \"rgba(153, 102, 255, 0.2)\",\n      \"rgba(255, 159, 64, 0.2)\"\n    ],\n    borderColor: [\n      \"rgba(255, 99, 132, 1)\",\n      \"rgba(54, 162, 235, 1)\",\n      \"rgba(255, 206, 86, 1)\",\n      \"rgba(75, 192, 192, 1)\",\n      \"rgba(153, 102, 255, 1)\",\n      \"rgba(255, 159, 64, 1)\"\n    ],\n    borderWidth: 1\n  }\n];\n\nlet LinechartData = [\n  {\n    label: \"My First dataset\",\n    backgroundColor: \"rgb(255, 99, 132)\",\n    borderColor: \"rgb(255, 99, 132)\",\n    data: [0, 10, 5, 2, 20, 30, 45]\n  }\n];\nexport default {\n  components: {\n    BarChart,\n    LineChart,\n    AppHeader\n  },\n  data() {\n    return {\n      fetchedBarData: null\n      //fetchedLineData: null\n    };\n  },\n  created() {\n    this.fetchBarChartData().then(result => {\n      /* console.log(result); */\n      this.fetchedBarData = result;\n    });\n    /*   this.fetchLineChartData().then(result => {\n      this.fetchedLineData = result;\n    }); */\n  },\n  methods: {\n    fetchBarChartData() {\n      return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n          resolve(BarchartData);\n        }, 2000);\n      });\n    }\n\n    /*  fetchLineChartData() {\n      return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n          resolve(LinechartData);\n        }, 2000);\n      });\n    } */\n  }\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/Chart"}]}